<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%CommonBandwidthAtypeName</name>
  <shortName>%CommonBandwidthAtypeShortName</shortName>
  <description>%CommonBandwidthAtypeDescription</description>
  <abbreviation>bw</abbreviation>
  <alias>bandwidth</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.event_based_analysis_f1103</property>
 </internal>
 <prerequisites>
  <rule>
   <ruleExpr>$PMU == core2</ruleExpr>
   <ruleExpr>$PMU == core2p</ruleExpr>
   <ruleExpr>$PMU == corei7b</ruleExpr>
   <ruleExpr>$PMU == snb</ruleExpr>
   <ruleExpr>$PMU == ivybridge</ruleExpr>
   <ruleExpr>$PMU == snbep</ruleExpr>
   <ruleExpr>$PMU == ivytown</ruleExpr>
   <ruleExpr>$PMU == haswell</ruleExpr>
   <ruleExpr>$PMU == haswell_server</ruleExpr>
   <ruleExpr>$PMU == crystalwell</ruleExpr>
   <ruleExpr>$PMU == knc</ruleExpr>
   <else>
    <error>%ThisAnalysisTypeIsNotApplicable</error>
   </else>
  </rule>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="">
  <xsl:if test="(exsl:ctx('PMU') = 'core2') or (exsl:ctx('PMU') = 'core2p')">
   <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
    <defaultValue>%PMUEventsViewpointName</defaultValue>
   </stringKnob>
  </xsl:if>
  <xsl:if test="(exsl:ctx('PMU') = 'corei7b')">
   <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
    <defaultValue>%WSMEXBandwidthViewpointName</defaultValue>
   </stringKnob>
  </xsl:if>
  <xsl:if test="(exsl:ctx('PMU') = 'snb') or (exsl:ctx('PMU') = 'snbep') or (exsl:ctx('PMU') = 'ivybridge') or (exsl:ctx('PMU') = 'haswell') or (exsl:ctx('PMU') = 'haswell_server') or (exsl:ctx('PMU') = 'ivytown') or (exsl:ctx('PMU') = 'crystalwell')">
   <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
    <defaultValue>%SNBBandwidthViewpointName</defaultValue>
   </stringKnob>
  </xsl:if>
  <xsl:if test="(exsl:ctx('PMU') = 'knc')">
   <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
    <defaultValue>%SNBBandwidthViewpointName</defaultValue>
   </stringKnob>
  </xsl:if>
 </knobs>
 <analysis>
  <collector id="runsa">
   <boolean:collectorKnob knob="cpuGpuUsageData">true</boolean:collectorKnob>
  </collector>
  <rule>
   <ruleExpr>$PMU != null</ruleExpr>
   <rule>
    <ruleExpr>$PMU == core2</ruleExpr>
    <ruleExpr>$PMU == core2p</ruleExpr>
    <collector idToAppend="runsa">
     <collectorKnob knob="pmuEventConfig">BUS_DRDY_CLOCKS.THIS_AGENT:sa=100000,BUS_TRANS_BURST.SELF:sa=200000,CPU_CLK_UNHALTED.CORE:sa=2000000,CPU_CLK_UNHALTED.REF:,INST_RETIRED.ANY:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == corei7b</ruleExpr>
    <collector idToAppend="runsa">
     <collectorKnob knob="pmuEventConfig">CPU_CLK_UNHALTED.THREAD:,INST_RETIRED.ANY:,CPU_CLK_UNHALTED.REF:,OFFCORE_RESPONSE_0.DEMAND_DATA_RD.ANY_LLC_MISS:,MEM_INST_RETIRED.LOADS:,UNC_M_B_CMD.RD_BCMD:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == snb</ruleExpr>
    <collector idToAppend="runsa">
     <boolean:collectorKnob knob="collectMemBandwidth">true</boolean:collectorKnob>
     <collectorKnob knob="pmuEventConfig">OFFCORE_RESPONSE.ANY_REQUEST.LLC_MISS_LOCAL.DRAM_0,OFFCORE_RESPONSE.ANY_REQUEST.LLC_MISS_LOCAL.DRAM_1,MEM_LOAD_UOPS_MISC_RETIRED.LLC_MISS_PS:,CPU_CLK_UNHALTED.THREAD:,CPU_CLK_UNHALTED.REF_TSC:,INST_RETIRED.ANY:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == ivybridge</ruleExpr>
    <collector idToAppend="runsa">
     <boolean:collectorKnob knob="collectMemBandwidth">true</boolean:collectorKnob>
     <collectorKnob knob="pmuEventConfig">MEM_LOAD_UOPS_LLC_MISS_RETIRED.LOCAL_DRAM:,CPU_CLK_UNHALTED.THREAD:,CPU_CLK_UNHALTED.REF_TSC:,INST_RETIRED.ANY:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == haswell</ruleExpr>
    <ruleExpr>$PMU == crystalwell</ruleExpr>
    <ruleExpr>$PMU == haswell_server</ruleExpr>
    <collector idToAppend="runsa">
     <boolean:collectorKnob knob="collectMemBandwidth">true</boolean:collectorKnob>
     <collectorKnob knob="pmuEventConfig">MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM:,CPU_CLK_UNHALTED.THREAD:,CPU_CLK_UNHALTED.REF_TSC:,INST_RETIRED.ANY:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == snbep</ruleExpr>
    <ruleExpr>$PMU == ivytown</ruleExpr>
    <collector idToAppend="runsa">
     <boolean:collectorKnob knob="collectMemBandwidth">true</boolean:collectorKnob>
     <collectorKnob knob="pmuEventConfig">MEM_LOAD_UOPS_RETIRED.LLC_MISS:,CPU_CLK_UNHALTED.THREAD:,CPU_CLK_UNHALTED.REF_TSC:,INST_RETIRED.ANY:</collectorKnob>
    </collector>
   </rule>
   <rule>
    <ruleExpr>$PMU == knc</ruleExpr>
    <collector idToAppend="runsa">
     <boolean:collectorKnob knob="collectMemBandwidth">true</boolean:collectorKnob>
     <collectorKnob knob="pmuEventConfig">CPU_CLK_UNHALTED:sa=10000000</collectorKnob>
    </collector>
   </rule>
  </rule>
 </analysis>
</bag>
